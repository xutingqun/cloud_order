package com.xmsmart.xiuba.ui.user;

import org.json.JSONObject;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.os.CountDownTimer;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.text.InputType;
import android.text.TextUtils;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import cn.smssdk.EventHandler;
import cn.smssdk.SMSSDK;
import cn.smssdk.utils.SMSLog;

import com.smart.library.encrypt.MD5;
import com.smart.library.okhttp.OkHttpClientManager;
import com.smart.library.util.IntentUtil;
import com.smart.library.util.ToastUtil;
import com.squareup.okhttp.Request;
import com.xmsmart.xiuba.R;
import com.xmsmart.xiuba.api.UserAPI;
import com.xmsmart.xiuba.bean.SuccessBean;
import com.xmsmart.xiuba.ui.main.MainActivity;
import com.xmsmart.xiuba.ui.order.OrderApplyActivity;
import com.xmsmart.xiuba.utils.DialogUtil;

/**
 * @author xutingqun
 */
@SuppressLint("ValidFragment")
public class RegisterFragment extends Fragment implements OnClickListener {
	private TimeCount time;
	private String phone;
	private String currentPage;
	private Activity mActivity;
	private EditText editPhone, editValidate, editPassword, editCompany;
	private LinearLayout llSendValidate, llSubmit, llCompanyName;
	private TextView tvSendValidate;
	ImageView ivIsLook;
	View view;
	boolean isLook = false;

	public RegisterFragment(String currentPage, Activity mActivity) {
		super();
		this.currentPage = currentPage;
		this.mActivity = mActivity;
	}

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		view = inflater.inflate(R.layout.frg_reg, null, false);
		EventHandler eh = new EventHandler() {

			@Override
			public void afterEvent(int event, int result, Object data) {
				Message msg = new Message();
				msg.arg1 = event;
				msg.arg2 = result;
				msg.obj = data;
				mHandler.sendMessage(msg);
			}

		};
		SMSSDK.registerEventHandler(eh);
		initView();
		return view;
	}

	private void initView() {
		isLook = false;
		time = new TimeCount(60000, 1000);

		ivIsLook = (ImageView) view.findViewById(R.id.iv_reg_password_is_look);
		editPhone = (EditText) view.findViewById(R.id.edit_reg_phone);
		editValidate = (EditText) view.findViewById(R.id.edit_reg_validate_num);
		editPassword = (EditText) view.findViewById(R.id.edit_reg_password);
		llSendValidate = (LinearLayout) view
				.findViewById(R.id.ll_reg_commit_validate);
		llSubmit = (LinearLayout) view.findViewById(R.id.ll_reg_btn);
		llCompanyName = (LinearLayout) view
				.findViewById(R.id.ll_reg_company_name);
		editCompany = (EditText) view.findViewById(R.id.edit_reg_company_name);
		tvSendValidate = (TextView) view
				.findViewById(R.id.tv_reg_send_validate);

		if (currentPage.equals("1")) {
			llCompanyName.setVisibility(View.GONE);
		} else {
			llCompanyName.setVisibility(View.VISIBLE);
		}
		llSendValidate.setOnClickListener(this);
		llSubmit.setOnClickListener(this);
		ivIsLook.setOnClickListener(this);

	}

	class TimeCount extends CountDownTimer {
		public TimeCount(long millisInFuture, long countDownInterval) {
			super(millisInFuture, countDownInterval);
		}

		@Override
		public void onFinish() {
			tvSendValidate.setText(getResources().getString(
					R.string.reg_send_validate));
			llSendValidate.setClickable(true);

		}

		@Override
		public void onTick(long millisUntilFinished) {
			llSendValidate.setClickable(false);// 防止重复点击
			tvSendValidate.setText(millisUntilFinished / 1000 + "秒");
		}

	}

	@SuppressLint("InlinedApi")
	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.ll_reg_commit_validate:
			if (!TextUtils.isEmpty(editPhone.getText().toString())) {
				if (editPhone.getText().toString().length() == 11) {
					time.start();// 开始计时
					SMSSDK.getVerificationCode("86", editPhone.getText()
							.toString());
					phone = editPhone.getText().toString();
				} else {
					ToastUtil.showToast(mActivity,
							R.string.toast_phone_length_wrong);
				}
			} else {
				ToastUtil.showToast(mActivity, R.string.toast_phone_not_null);
			}
			break;
		case R.id.ll_reg_btn:
			if (editPhone.getText().toString().equals("")
					|| editPassword.getText().toString().equals("")
					|| editValidate.getText().toString().equals("")) {
				ToastUtil.showToast(mActivity,
						R.string.toast_content_no_complete);
			} else {
				if (RegisterActivity.mViewPager.getCurrentItem() == 1
						&& editCompany.getText().toString().equals("")) {
					ToastUtil.showToast(mActivity,
							R.string.toast_content_no_complete);
				} else {
					DialogUtil.showRoundProcessDialog(mActivity, "正在提交注册数据...");
					SMSSDK.submitVerificationCode("86", phone, editValidate
							.getText().toString());
				}
			}

			break;
		case R.id.iv_reg_password_is_look:
			if (isLook) {
				editPassword
						.setInputType(InputType.TYPE_TEXT_VARIATION_PASSWORD
								| InputType.TYPE_CLASS_TEXT);
				ivIsLook.setBackgroundResource(R.drawable.iv_forget_password_no_look);
				isLook = false;
			} else {
				editPassword
						.setInputType(InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD);
				ivIsLook.setBackgroundResource(R.drawable.iv_forget_password_islook);
				isLook = true;
			}
			break;
		default:
			break;
		}
	}

	Handler mHandler = new Handler() {
		public void handleMessage(Message msg) {
			super.handleMessage(msg);
			int event = msg.arg1;
			int result = msg.arg2;
			Object data = msg.obj;
			Log.e("event", "event=" + event);
			if (result == SMSSDK.RESULT_COMPLETE) {
				System.out.println("--------result" + event);
				if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {// 提交验证码成功
					submit();
				} else if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE) {
					// 已经验证
					ToastUtil.showToast(mActivity,
							R.string.toast_phone_validate_has_commit);
				}

			} else {
				DialogUtil.closeRoundProcessDialog();
				ToastUtil.showToast(mActivity,
						R.string.toast_phone_validate_worng);
				int status = 0;
				try {
					((Throwable) data).printStackTrace();
					Throwable throwable = (Throwable) data;
					JSONObject object = new JSONObject(throwable.getMessage());
					String des = object.optString("detail");
					status = object.optInt("status");
					if (!TextUtils.isEmpty(des)) {
						ToastUtil.showToast(mActivity, des);
						return;
					}
				} catch (Exception e) {
					SMSLog.getInstance().w(e);
				}
			}

		};
	};

	// 注册提交
	public void submit() {
		OkHttpClientManager.postAsyn(
				UserAPI.RegUrl(),
				new OkHttpClientManager.ResultCallback<SuccessBean>() {

					@Override
					public void onResponse(SuccessBean result) {
						Log.e("result", result.toString());
						DialogUtil.closeRoundProcessDialog();
						if (result.getSuccess().equals("true")) {
							IntentUtil.mStartActivity(mActivity,
									LoginActivity.class);
						} else {
							ToastUtil.showToast(mActivity, result.getMessage());
						}

					}

					@Override
					public void onError(Request request, Exception e) {
						DialogUtil.closeRoundProcessDialog();
						Log.e("error", e + "");
						ToastUtil.showToast(mActivity, e
								+ "");
					}
				},
				new OkHttpClientManager.Param[] {
						new OkHttpClientManager.Param("phoneNum", editPhone
								.getText().toString()),
						new OkHttpClientManager.Param("password", MD5
								.md5(editPassword.getText().toString())),
						new OkHttpClientManager.Param("cropName", editCompany
								.getText().toString()) });

	}

}
