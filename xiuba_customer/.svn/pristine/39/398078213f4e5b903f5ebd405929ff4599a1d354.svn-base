package com.xmsmart.xiuba.ui.main;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.apache.http.Header;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.LinearLayout;
import android.widget.Toast;

import com.smart.library.okhttp.OkHttpClientManager;

import com.google.gson.Gson;
import com.loopj.android.http.TextHttpResponseHandler;
import com.slidingmenu.lib.SlidingMenu;
import com.smart.library.util.HttpUtils;
import com.smart.library.util.IntentUtil;
import com.smart.library.util.JsonUtils;
import com.smart.library.util.SharedPreferencesUtils;
import com.smart.library.util.ToastUtil;
import com.smart.library.view.EmptyLayout;
import com.smart.library.view.NewGridView;

import com.squareup.okhttp.Request;
import com.xmsmart.xiuba.R;
import com.xmsmart.xiuba.api.BaseAPI;
import com.xmsmart.xiuba.api.MainAPI;

//import com.xmsmart.xiuba.bean.CustomerConfigModel;

import com.xmsmart.xiuba.bean.BannerModel;
import com.xmsmart.xiuba.bean.BusinessBean;
import com.xmsmart.xiuba.bean.MainBean;
import com.xmsmart.xiuba.bean.MainDataBean;
import com.xmsmart.xiuba.bean.BannerModel.Data;
import com.xmsmart.xiuba.constant.Constant;
import com.xmsmart.xiuba.db.DataStorage;
import com.xmsmart.xiuba.ui.BaseActivity;
import com.xmsmart.xiuba.ui.order.OrderApplyActivity;
import com.xmsmart.xiuba.ui.settings.SettingsActivity;
import com.xmsmart.xiuba.ui.user.LoginActivity;
import com.xmsmart.xiuba.ui.user.ForgetActivity;
import com.xmsmart.xiuba.ui.user.PersonalActivity;
import com.xmsmart.xiuba.ui.user.RegisterActivity;
import com.xmsmart.xiuba.utils.DialogUtil;
import com.xmsmart.xiuba.utils.TopUtil;
import com.xmsmart.xiuba.view.RollHeaderView;

@SuppressLint("ResourceAsColor")
public class MainActivity extends BaseActivity implements OnItemClickListener {

	private SlidingMenu menu;
	private String url;
	private MainBean mMBean;
	private List<MainDataBean> mainDataBeans;
	private NewGridView iconGv;
	private MainAdapter mMainAdapter;
	private RollHeaderView banner;
	private String business;
	private String strbanner;
	private List<com.xmsmart.xiuba.bean.BusinessBean.Data> data;
	private com.smart.library.view.EmptyLayout view_empty;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);

		setBarColor(R.color.orange);

		setContentView(R.layout.ac_mainn);
		
		initTopView();
		
		initView();


	}

	private void initView() {

		view_empty = (EmptyLayout) findViewById(R.id.empty_lay);
		view_empty.setOnLayoutClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				
				loadBannerData();
				loadbusinessData();
			}
		});
		
		banner = (RollHeaderView) findViewById(R.id.banner);
		banner.setOnHeaderViewClickListener(new RollHeaderView.HeaderViewClickListener() {
			@Override
			public void HeaderViewClick(int position) {
//				Toast.makeText(MainActivity.this, "点击广告 : " + position,
//						Toast.LENGTH_SHORT).show();
			}
		});
		
		iconGv = (NewGridView) findViewById(R.id.gv_main_icon);
		iconGv.setOnItemClickListener(this);

		getSpStorage();
		loadBannerData();
		loadbusinessData();

	}

	/**
	 * 获取，存储数据
	 * */
	private void getSpStorage() {

		// 获取业务类型存储数据
		business = (String) SharedPreferencesUtils.getParam(this,
				MainActivity.class.getSimpleName() + "business", "");

		if (!business.equals("")) {
			gsonbusiness(business);
			Log.e("------", "从本地读取");
		}
		// 获取 轮播存储数据
		strbanner = (String) SharedPreferencesUtils.getParam(this,
				MainActivity.class.getSimpleName() + "banner", "");

		if (!strbanner.equals("")) {
			gsonbanner(strbanner);
			Log.e("------", "从本地读取");
		}
	}

	/**
	 * 获取 banner 广告 图片
	 * */
	private void loadBannerData() {

		view_empty.setErrorType(EmptyLayout.NETWORK_LOADING);
		
		OkHttpClientManager.getAsyn(BaseAPI.getadvertisements(),

		new OkHttpClientManager.ResultCallback<String>() {
			@Override
			public void onError(Request request, Exception e) {
				
				ToastUtil.showToast(MainActivity.this, R.string.toast_connect_to_server_failed);
				view_empty.setErrorType(EmptyLayout.NETWORK_ERROR);
				
			}

			@Override
			public void onResponse(String response) {
				view_empty.setVisibility(View.GONE);
				
				
				gsonbanner(response);

			}
		});

	}

	/**
	 * 获取 业务类型列表
	 * */
	private void loadbusinessData() {
		
//		 DialogUtil.showRoundProcessDialog(this, "加载中...");
		 
		OkHttpClientManager.getAsyn(BaseAPI.getlistbusiness(),
				new OkHttpClientManager.ResultCallback<String>() {
					@Override
					public void onError(Request request, Exception e) {
						
//						 DialogUtil.closeRoundProcessDialog();
						ToastUtil.showToast(MainActivity.this, R.string.toast_connect_to_server_failed);
						
					}

					@Override
					public void onResponse(String response) {
						
//						 DialogUtil.closeRoundProcessDialog();
						 gsonbusiness(response);
						 
					}
				});

	}

	/**
	 * 解析 业务类型列表
	 * */
	private void gsonbusiness(String response) {

		Gson gson = new Gson();
		BusinessBean businessBean = gson.fromJson(response, BusinessBean.class);
		if (businessBean.getSuccess()) {
			if (!business.equals(response)) {
				// 数据一样，不存储
				SharedPreferencesUtils.setParam(MainActivity.this,
						MainActivity.class.getSimpleName() + "business",
						response);
			}

			data = businessBean
					.getData();

			mMainAdapter = new MainAdapter(data, MainActivity.this, iconGv);
			iconGv.setAdapter(mMainAdapter);

			mMainAdapter.notifyDataSetChanged();

		} else {
			ToastUtil
					.showToast(MainActivity.this, R.string.toast_content_errpr);
		}
	}

	/**
	 * 解析 轮播
	 * */
	private void gsonbanner(String strban) {
		Gson gson = new Gson();
		BannerModel bannerModel = gson.fromJson(strban, BannerModel.class);
		if (bannerModel.getSuccess()) {
			
			view_empty.setErrorType(EmptyLayout.HIDE_LAYOUT);

			if (!strbanner.equals("strban")) {// 数据一样，不存储
				SharedPreferencesUtils.setParam(MainActivity.this,
						MainActivity.class.getSimpleName() + "banner", strban);
			}

			List<Data> data = bannerModel.getData();

			List<String> imgUrlList = new ArrayList<String>();

			for (int i = 0; i < data.size(); i++) {
				String imagurl = BaseAPI.URL + data.get(i).getImagePath()
						+ data.get(i).getImage();
				imgUrlList.add(imagurl);
			}
			banner.setImgUrlData(imgUrlList);// banner设置图片显示
			
		} else {
			
			view_empty.setErrorType(EmptyLayout.NODATA);
			
			ToastUtil
					.showToast(MainActivity.this, 
							R.string.toast_content_errpr);
			
		}

	}

	/**
	 * 设置头部标题栏
	 */
	private void initTopView() {

		TopUtil.setTopBackground(this, R.color.orange);
		TopUtil.setViewVisiable(this, 1, 0, 1, 0, 1, 0);
		TopUtil.setLeftImage(this, R.drawable.btn_top_ico);
		TopUtil.setCenterImage(this, R.drawable.main_top_ico);
		TopUtil.setRightImage(this, R.drawable.btn_top_set);

	}

	/**
	 * 设置左侧菜单 8-16取消左滑
	 */
	private void initSlidingMenu() {

		menu = new SlidingMenu(this);
		menu.setMode(SlidingMenu.LEFT);
		menu.setTouchModeAbove(SlidingMenu.TOUCHMODE_FULLSCREEN);
		menu.setShadowWidthRes(R.dimen.shadow_width);

		if (Constant.ISLOGIN)
			menu.setBehindOffset(getWindowManager().getDefaultDisplay()
					.getWidth() / 4);
		else
			menu.setBehindOffset(getWindowManager().getDefaultDisplay()
					.getWidth());

		menu.setFadeDegree(0.5f);

		// 把滑动菜单添加进所有的Activity中，可选值SLIDING_CONTENT ， SLIDING_WINDOW
		if (Constant.ISLOGIN && menu != null) {
			menu.attachToActivity(this, SlidingMenu.SLIDING_CONTENT); // 影响banner滑动
		}

		View view = LayoutInflater.from(this).inflate(R.layout.act_personnal_edit,
				null);
		menu.setMenu(view);
	}

	@Override
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.iv_top_more:
			if (DataStorage.isLogin(this)) {
				startActivity(new Intent(MainActivity.this,
						SettingsActivity.class));
			} else {
				startActivity(new Intent(MainActivity.this, LoginActivity.class));
			}
			break;

		default:
			break;
		}
	}

	@Override
	public void BackSharingClick(View view) {
		if (DataStorage.isLogin(this)) {
			// if (Constant.ISLOGIN && menu != null) {// 左滑
			// menu.showMenu();
			startActivity(new Intent(MainActivity.this, PersonalActivity.class));
		} else
			startActivity(new Intent(MainActivity.this, LoginActivity.class));
	}

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		
		
		
		if (DataStorage.isLogin(this)) {
			
			Bundle bundle = new Bundle();
			bundle.putString("businessId", data.get(position).getId()+"");
			IntentUtil.mStartActivityWithBundle(MainActivity.this, 
					OrderApplyActivity.class,bundle);
			
		} else startActivity(new Intent(MainActivity.this, LoginActivity.class));
		

	}

	@Override
	protected void onResume() {
		super.onResume();

		// if (Constant.ISLOGIN && menu != null) //左滑
		// menu.setBehindOffset(getWindowManager().getDefaultDisplay()
		// .getWidth() / 4);
	}

}
